%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}[1999/12/01]
\ProvidesPackage{collectbox}[2011/07/30 v0.2a Collect macro arguments as boxes]
%    \end{macrocode}
%
% \begin{macro}{\collectedbox}
% Box register used to store collected box.
%    \begin{macrocode}
\newsavebox\collectedbox
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\collectbox}
% User level interface. Scans for potential star and optional arguments.
%    \begin{macrocode}
\newcommand*\collectbox{%
    \@ifstar
        {\collectbox@a{{\BOXCONTENT}}}%
        {\collectbox@a{}}%
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectbox@a}
%    \begin{macrocode}
\long\def\collectbox@a#1{%
    \@ifnextchar[%
        {\collectbox@b{#1}}%
        {\collectbox@b{#1}[]}%
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectbox@b}
%    \begin{macrocode}
\long\def\collectbox@b#1[#2]#3{%
    \@ifnextchar[%
        {\collectbox@c{#2}{#3#1}}%
        {\collectbox@c{#2}{#3#1}[]}%
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectbox@c}
%    \begin{macrocode}
\long\def\collectbox@c#1#2[#3]{%
    \collectbox@{#1}{#2}{#3}%
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectbox@}
% The box is saved using |\setbox|. Color is supported by using |\collectbox@setgroup|.
% A brace group is then opened using |\bgroup| which will replace the opening brace of the 
% ``argument''. The end code is installed in this group using |\aftergroup|.
% The opening brace written by the user is then removed by assigning it as token to a dummy variable.
% If no |{| or |\bgroup| follows the next token is taken as sole content.
%    \begin{macrocode}
\newcommand\collectbox@[3]{%
    \begingroup
    \leavevmode
    \@temptokena{#3\collectbox@end#2\endgroup}%
    \setbox\collectedbox\hbox\bgroup
       \collectbox@setgroup
       #1\bgroup
       \aftergroup\the
       \aftergroup\@temptokena
       \collectbox@bgroup
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectbox@bgroup}
%    \begin{macrocode}
\def\collectbox@macro@bgroup{%
    \@ifnextchar\bgroup
        {\let\@let@token=}%
        {\collectbox@arg}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\collectbox@env@bgroup}
%    \begin{macrocode}
\def\collectbox@env@bgroup{%
    \let\collectbox@endcode\relax
    \let\collectbox@bgroup\collectbox@macro@bgroup
    \ignorespaces
}
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\let\collectbox@bgroup\collectbox@macro@bgroup
%    \end{macrocode}
%
%
% \begin{macro}{\collectbox@setgroup}
% Used at the very begin of the stored box.
%    \begin{macrocode}
\def\collectbox@setgroup{%
    \color@setgroup
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectbox@endgroup}
% Used at the very end of the stored box.
%    \begin{macrocode}
\def\collectbox@endgroup{%
    \collectbox@endcode
    \color@endgroup
}
\let\collectbox@endcode\relax
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\@collectbox}
% Simpler and quicker version of \Macro\collectbox.
%    \begin{macrocode}
\newcommand\@collectbox[1]{%
    \begingroup
    \leavevmode
    \@temptokena{\collectbox@end#1\endgroup}%
    \setbox\collectedbox\hbox\bgroup
       \collectbox@setgroup\bgroup
       \aftergroup\the
       \aftergroup\@temptokena
       \collectbox@bgroup
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectbox@arg}
% Supports |\collectbox{<code>}\somemacro| in addition to
% |\collectbox{<code>}{\somemacro}|. The first following token is read and the inner brace group is closed
% to trigger the |\aftergroup| code.
%    \begin{macrocode}
\def\collectbox@arg#1{%
    #1\egroup
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectbox@end}
% The color group is first closed, followed by the closing brace of the |\setbox| command.
% The user dimension macros are then defined. 
% Direct after this code the users code is processed and concluded with a |\endgroup|.
%    \begin{macrocode}
\def\collectbox@end{%
    \collectbox@endgroup
    \egroup
    \collectbox@protecteddef\BOXCONTENT{\usebox\collectedbox}%
    \collectbox@protecteddef\width{\wd\collectedbox}%
    \collectbox@protecteddef\height{\ht\collectedbox}%
    \collectbox@protecteddef\depth{\dp\collectedbox}%
    \collectbox@protecteddef\totalheight{\@ovri}%
    \totalheight\height
    \advance\totalheight\depth
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectbox@protecteddef}
%    \begin{macrocode}
\begingroup
\expandafter\ifx\csname protected\endcsname\relax
    \let\collectbox@protecteddef\def%
\else
    \gdef\collectbox@protecteddef{\protected\def}%
\fi
\endgroup
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectbox@code}
% Global storage macro for user code.
%    \begin{macrocode}
\let\collectbox@code\empty
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectboxto}
% User level interface. Reads box register and checks for optional argument.
%    \begin{macrocode}
\newcommand\collectboxto[1]{%
    \@ifnextchar[%
        {\collectboxto@a{#1}}%
        {\collectboxto@a{#1}[]}%
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectboxto@a}
% Reads first optional and next mandatory arguments.
%    \begin{macrocode}
\long\def\collectboxto@a#1[#2]#3{%
    \@ifnextchar[%
        {\collectboxto@b{#1}{#2}{#3}}%
        {\collectboxto@b{#1}{#2}{#3}[]}%
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectboxto@b}
% Reads second optional argument.
%    \begin{macrocode}
\long\def\collectboxto@b#1#2#3[#4]{%
    \collectboxto@{#1}{#2}{#3}{#4}%
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectboxto@}[4]{box register}{code at begin}{code}{code at end}
% Installs code and starts to collect the box.
%    \begin{macrocode}
\newcommand\collectboxto@[4]{%
    \leavevmode
    \setbox#1\hbox\bgroup
       \def\collectbox@code{#4\collectbox@endgroup\egroup#3}%
       \collectbox@setgroup#2\bgroup
       \aftergroup\collectbox@code
       \collectbox@bgroup
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\@collectboxto}
% Collects the next brace group as hbox into box register |#1| and executes token |#2| afterwards.
%    \begin{macrocode}
\newcommand\@collectboxto[2]{%
    \leavevmode
    \setbox#1\hbox\bgroup
       \def\collectbox@code{\collectbox@endgroup\egroup#2}%
       \collectbox@setgroup\bgroup
       \aftergroup\collectbox@code
       \collectbox@bgroup
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\nocollectbox@}[3]{<code at begin>}{<code>}{<code at end>}
% Turns a brace group into \Macro\hbox{<code at begin><content><code at end>}<code>.
%    \begin{macrocode}
\newcommand\nocollectbox@[3]{%
    \leavevmode
    \hbox\bgroup
       \def\collectbox@code{#3\egroup#2}%
       #1\bgroup
       \aftergroup\collectbox@code
       \collectbox@bgroup
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\nocollectbox@to}[4]{<length>}{<code at begin>}{<code>}{<code at end>}
% Turns a brace group into \Macro\hbox' to '<length>{<code at begin><content><code at end>}<code>.
%    \begin{macrocode}
\newcommand\nocollectbox@to[4]{%
    \leavevmode
    \hb@xt@#1\bgroup
       \def\collectbox@code{#4\egroup#3}%
       #2\bgroup
       \aftergroup\collectbox@code
       \collectbox@bgroup
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectboxcheckenv}
% Checks if current macro is used as environment given by |#1|.
% If so the |bgroup| eating macro is redefined.
% A suitable end-macro is provided if non exists. All of this is done inside
% a group to keep thing local.
%    \begin{macrocode}
\newcommand*\collectboxcheckenv[1]{%
    \begingroup
    \def\@tempa{#1}%
    \ifx\@currenvir\@tempa
        \edef\@currenvir{\@currenvir\noexpand\empty}%
        \let\collectbox@bgroup\collectbox@env@bgroup
        \def\collectbox@endcode\collectbox@env@endcode
        \expandafter\ifx\csname end#1\endcsname\relax
            \expandafter\let\csname end#1\endcsname\collectbox@envend
        \fi
    \else
        \endgroup
    \fi
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectbox@env@endcode}
%    \begin{macrocode}
\def\collectbox@env@endcode{\ifhmode\unskip\fi}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\collectbox@envend}
%    \begin{macrocode}
\def\collectbox@envend{\egroup\endgroup}%
%    \end{macrocode}
% \end{macro}
%
%
\endinput
